# syntax=docker/dockerfile:1

###
# Étape 1 : Construire l'application Go pour ARM64
###
FROM golang:1.20 AS build

WORKDIR /app

# Copier les fichiers de dépendances
COPY go.mod go.sum ./
RUN go mod download

# Copier le code source
COPY main.go ./

# Copier les fichiers de police (nécessaires pour les caractères UTF-8)
COPY fonts/ fonts/

COPY images/ images/

# Compiler l'application Go pour Linux ARM64
RUN CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o /bootstrap main.go

###
# Étape 2 : Préparer l'image Lambda basée sur Amazon Linux 2023
###
FROM public.ecr.aws/lambda/provided:al2023

# Copier le binaire compilé et le renommer en "bootstrap"
COPY --from=build /bootstrap /var/runtime/bootstrap

# Copier les polices nécessaires dans /var/task/fonts
COPY --from=build /app/fonts /var/task/fonts

# Copier les polices nécessaires dans /var/task/fonts
COPY --from=build /app/images /var/task/images

# Vérifier la présence des fichiers de police dans l'image finale
RUN ls -la /var/task/images

# Assurer que le fichier "bootstrap" est exécutable
RUN chmod +x /var/runtime/bootstrap

# Définir le point d'entrée
CMD ["bootstrap"]
